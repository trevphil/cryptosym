name: Build and test C++

on:
  push:
    branches: [ "cpp" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              os: windows-latest,
              cc: "cl", cxx: "cl",
              cmake-cmd: "cmake -GNinja ..",
              cmake-build-cmd: "cmake --build build --config Release"
            }
          - {
              os: ubuntu-latest,
              cc: "gcc", cxx: "g++",
              cmake-cmd: "cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..",
              cmake-build-cmd: "cmake --build build"
            }
          - {
              os: macos-latest,
              cc: "clang", cxx: "clang++",
              cmake-cmd: "cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..",
              cmake-build-cmd: "cmake --build build"
            }
        # os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.9" ]

    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up cmake
        uses: lukka/get-cmake@latest
      - name: Set up ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python build dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Install MPI
        uses: mpi4py/setup-mpi@v1
      - name: Prepare to compile C++
        run: |
          mkdir build
          cd build
          ${{ matrix.config.cmake-cmd }}
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
      - name: Compile C++
        run: ${{ matrix.config.cmake-build-cmd }}
      - name: Run tests
        run: ctest --test-dir build
