name: PyPI deployment

on:
  push:
    branches: [ "cpp" ]

jobs:
  build_sdist:
    name: Create source distribution (sdist)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # `true` to checkout submodules or `recursive` to recursively checkout
        submodules: true
    - name: Build sdist
      run: pipx run build --sdist
    - name: Check metadata
      run: pipx run twine check dist/*
    - name: Save sdist *.tar.gz as artifact
      uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up cmake
        uses: lukka/get-cmake@latest
      - name: Set up ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Install MPI
        uses: mpi4py/setup-mpi@v1
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.5.0
      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash
      - name: Save wheels as artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  pypi_release:
    name: Upload sdist and wheels to PyPI
    needs: [ build_sdist, build_wheels ]
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python
      uses: actions/setup-python@v3
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
